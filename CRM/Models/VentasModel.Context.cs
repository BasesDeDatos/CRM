//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public interface ICRMEntities3
    {
        DbSet<Producto> Productos { get; set; }
        ObjectResult<getEntrenamientos_Result> getEntrenamientos(string pUsuario);
        ObjectResult<getReportes_Result> getReportes(string pUsuario);
        ObjectResult<getVendedores_Result> getVendedores(string pEmail);
    }


    public partial class CRMEntities3 : DbContext, ICRMEntities3
    {
        public CRMEntities3()
            : base("name=CRMEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Producto> Productos { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vendedore> Vendedores { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<Ventas_x_Productos> Ventas_x_Productos { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Entrenamiento> Entrenamientos { get; set; }
        public virtual DbSet<Entrenamientos_x_Usuarios> Entrenamientos_x_Usuarios { get; set; }
        public virtual DbSet<Reporte> Reportes { get; set; }
    
        public virtual ObjectResult<getVentas_Result> getVentas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVentas_Result>("getVentas");
        }
    
        public virtual ObjectResult<getPropuestas_Result> getPropuestas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPropuestas_Result>("getPropuestas");
        }
    
        public virtual ObjectResult<getPropuestas1_Result> getPropuestas1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPropuestas1_Result>("getPropuestas1");
        }
    
        public virtual ObjectResult<getPropuestas2_Result> getPropuestas2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPropuestas2_Result>("getPropuestas2");
        }
    
        public virtual ObjectResult<getVendedores_Result> getVendedores(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVendedores_Result>("getVendedores", emailParameter);
        }
    
        public virtual ObjectResult<getEntrenamientos_Result> getEntrenamientos(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEntrenamientos_Result>("getEntrenamientos", usernameParameter);
        }
    
        public virtual ObjectResult<getReportes_Result> getReportes(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getReportes_Result>("getReportes", usernameParameter);
        }
    }
}
